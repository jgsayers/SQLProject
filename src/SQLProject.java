
import javax.swing.JFrame;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author jacks
 */
public class SQLProject extends JFrame {
    
    //Professors requirement
    private Connection conn;
    String serverName = "csor12c.dhcp.bsu.edu";
    private int portNumber=1521;
    private String sid = "or12cdb";
    private String url = "jdbc:oracle:thin:@" + serverName + ":" + portNumber + ":" + sid;
    private String username = "jgsayers";
    private String password = "7050";
    

    /**
     * Initializes the applet SQLProject
     */
    public SQLProject() throws SQLException {
        init();
        setVisible(true);
        setSize(500, 600);
        setResizable(false);
        jPanelCustomer.setVisible(false);
        jPanelEmployee.setVisible(false);
        jPanelCargoVan.setVisible(false);
        jPanelFullSizeVan.setVisible(false);
        jPanelPickup.setVisible(false);

        DriverManager.registerDriver(new oracle.jdbc.OracleDriver());
    }

    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SQLProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SQLProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SQLProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SQLProject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelCustomer = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxCustomerCategory = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldCustomer = new javax.swing.JTextField();
        jButtonCustomer = new javax.swing.JButton();
        jComboBoxCustomerOperator = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxCustomerSortCategory = new javax.swing.JComboBox<>();
        jComboBoxCustomerOrder = new javax.swing.JComboBox<>();
        jComboBoxCustomerMaxCategory = new javax.swing.JComboBox<>();
        jButtonCustomerMax = new javax.swing.JButton();
        jButtonCustomerMin = new javax.swing.JButton();
        jComboBoxCustomerMinCategory = new javax.swing.JComboBox<>();
        jComboBoxCustomerDoes = new javax.swing.JComboBox<>();
        jButtonCustomerAvg = new javax.swing.JButton();
        jComboBoxCustomerAvgCategory = new javax.swing.JComboBox<>();
        jButtonCustomerSum = new javax.swing.JButton();
        jComboBoxCustomerSumCategory = new javax.swing.JComboBox<>();
        jPanelEmployee = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxEmployeeCategory = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldEmployee = new javax.swing.JTextField();
        jButtonEmployee = new javax.swing.JButton();
        jComboBoxEmployeeOperator = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jComboBoxEmployeeSortCategory = new javax.swing.JComboBox<>();
        jComboBoxEmployeeOrder = new javax.swing.JComboBox<>();
        jButtonEmployeeMax = new javax.swing.JButton();
        jComboBoxEmployeeMaxCategory = new javax.swing.JComboBox<>();
        jButtonEmployeeMin = new javax.swing.JButton();
        jComboBoxEmployeeMinCategory = new javax.swing.JComboBox<>();
        jComboBoxEmployeeDoes = new javax.swing.JComboBox<>();
        jButtonEmployeeAvg = new javax.swing.JButton();
        jComboBoxEmployeeAvgCategory = new javax.swing.JComboBox<>();
        jButtonEmployeeSum = new javax.swing.JButton();
        jComboBoxEmployeeSumCategory = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxCategory = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaResults = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jPanelCargoVan = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxCargoVanCategory = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldCargoVan = new javax.swing.JTextField();
        jButtonCargoVan = new javax.swing.JButton();
        jComboBoxCargoVanOperator = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jComboBoxCargoVanSortCategory = new javax.swing.JComboBox<>();
        jComboBoxCargoVanOrder = new javax.swing.JComboBox<>();
        jButtonCargoVanMax = new javax.swing.JButton();
        jComboBoxCargoVanMaxCategory = new javax.swing.JComboBox<>();
        jButtonCargoVanMin = new javax.swing.JButton();
        jComboBoxCargoVanMinCategory = new javax.swing.JComboBox<>();
        jComboBoxCargoVanDoes = new javax.swing.JComboBox<>();
        jButtonCargoVanAvg = new javax.swing.JButton();
        jComboBoxCargoVanAvgCategory = new javax.swing.JComboBox<>();
        jButtonCargoVanSum = new javax.swing.JButton();
        jComboBoxCargoVanSumCategory = new javax.swing.JComboBox<>();
        jPanelFullSizeVan = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxFullSizeVanCategory = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldFullSizeVan = new javax.swing.JTextField();
        jButtonFullSizeVan = new javax.swing.JButton();
        jComboBoxFullSizeVanOperator = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jComboBoxFullSizeVanSortCategory = new javax.swing.JComboBox<>();
        jComboBoxFullSizeVanOrder = new javax.swing.JComboBox<>();
        jButtonFullSizeVanMax = new javax.swing.JButton();
        jComboBoxFullSizeVanMaxCategory = new javax.swing.JComboBox<>();
        jButtonFullSizeVanMin = new javax.swing.JButton();
        jComboBoxFullSizeVanMinCategory = new javax.swing.JComboBox<>();
        jComboBoxFullSizeVanDoes = new javax.swing.JComboBox<>();
        jButtonFullSizeVanAvg = new javax.swing.JButton();
        jComboBoxFullSizeVanAvgCategory = new javax.swing.JComboBox<>();
        jButtonFullSizeVanSum = new javax.swing.JButton();
        jComboBoxFullSizeVanSumCategory = new javax.swing.JComboBox<>();
        jPanelPickup = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxPickupCategory = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldPickup = new javax.swing.JTextField();
        jButtonPickup = new javax.swing.JButton();
        jComboBoxPickupOperator = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jComboBoxPickupSortCategory = new javax.swing.JComboBox<>();
        jComboBoxPickupOrder = new javax.swing.JComboBox<>();
        jButtonPickupMax = new javax.swing.JButton();
        jComboBoxPickupMaxCategory = new javax.swing.JComboBox<>();
        jButtonPickupMin = new javax.swing.JButton();
        jComboBoxPickupMinCategory = new javax.swing.JComboBox<>();
        jComboBoxPickupDoes = new javax.swing.JComboBox<>();
        jButtonPickupAvg = new javax.swing.JButton();
        jComboBoxPickupAvgCategory = new javax.swing.JComboBox<>();
        jButtonPickupSum = new javax.swing.JButton();
        jComboBoxPickupSumCategory = new javax.swing.JComboBox<>();

        jPanelCustomer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Customer");

        jComboBoxCustomerCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Social Security Number", "First Name", "Last Name", "License Number" }));

        jLabel3.setText("Search where: ");

        jButtonCustomer.setText("Search");
        jButtonCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCustomerActionPerformed(evt);
            }
        });

        jComboBoxCustomerOperator.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Equal", "Begin with", "End with", "Contain" }));

        jLabel13.setText("Sorted by:");

        jComboBoxCustomerSortCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Social Security Number", "First Name", "Last Name", "License Number" }));

        jComboBoxCustomerOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascending", "Descending" }));

        jComboBoxCustomerMaxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Social Security Number", "First Name", "Last Name", "License Number" }));

        jButtonCustomerMax.setText("Find Maximum of:");
        jButtonCustomerMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCustomerMaxActionPerformed(evt);
            }
        });

        jButtonCustomerMin.setText("Find Minimum of:");
        jButtonCustomerMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCustomerMinActionPerformed(evt);
            }
        });

        jComboBoxCustomerMinCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Social Security Number", "First Name", "Last Name", "License Number" }));

        jComboBoxCustomerDoes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Does", "Does Not" }));

        jButtonCustomerAvg.setText("Find Average of:");
        jButtonCustomerAvg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCustomerAvgActionPerformed(evt);
            }
        });

        jComboBoxCustomerAvgCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Social Security Number", "License Number" }));

        jButtonCustomerSum.setText("Find Sum of:");
        jButtonCustomerSum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCustomerSumActionPerformed(evt);
            }
        });

        jComboBoxCustomerSumCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Social Security Number", "License Number" }));

        javax.swing.GroupLayout jPanelCustomerLayout = new javax.swing.GroupLayout(jPanelCustomer);
        jPanelCustomer.setLayout(jPanelCustomerLayout);
        jPanelCustomerLayout.setHorizontalGroup(
            jPanelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCustomerLayout.createSequentialGroup()
                        .addComponent(jComboBoxCustomerSortCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxCustomerOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jButtonCustomer))
                    .addComponent(jTextFieldCustomer)
                    .addGroup(jPanelCustomerLayout.createSequentialGroup()
                        .addGroup(jPanelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addGroup(jPanelCustomerLayout.createSequentialGroup()
                                .addComponent(jButtonCustomerMax)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCustomerMaxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelCustomerLayout.createSequentialGroup()
                                .addComponent(jButtonCustomerMin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCustomerMinCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelCustomerLayout.createSequentialGroup()
                                .addComponent(jComboBoxCustomerCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCustomerDoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCustomerOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelCustomerLayout.createSequentialGroup()
                                .addGroup(jPanelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonCustomerAvg)
                                    .addComponent(jButtonCustomerSum))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxCustomerSumCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxCustomerAvgCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelCustomerLayout.setVerticalGroup(
            jPanelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(6, 6, 6)
                .addGroup(jPanelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCustomerCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCustomerOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCustomerDoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCustomer)
                    .addComponent(jComboBoxCustomerSortCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCustomerOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCustomerSum)
                    .addComponent(jComboBoxCustomerSumCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCustomerAvg)
                    .addComponent(jComboBoxCustomerAvgCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCustomerMin)
                    .addComponent(jComboBoxCustomerMinCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCustomerMax)
                    .addComponent(jComboBoxCustomerMaxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanelEmployee.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setText("Employee");

        jComboBoxEmployeeCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Social Security Number", "Name", "System Access Code" }));

        jLabel5.setText("Search where: ");

        jButtonEmployee.setText("Search");
        jButtonEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmployeeActionPerformed(evt);
            }
        });

        jComboBoxEmployeeOperator.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Equal", "Begin with", "End with", "Contain" }));

        jLabel15.setText("Sorted by:");

        jComboBoxEmployeeSortCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Social Security Number", "Name", "System Access Code" }));

        jComboBoxEmployeeOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascending", "Descending" }));

        jButtonEmployeeMax.setText("Find Maximum of:");
        jButtonEmployeeMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmployeeMaxActionPerformed(evt);
            }
        });

        jComboBoxEmployeeMaxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Social Security Number", "Name", "System Access Code" }));

        jButtonEmployeeMin.setText("Find Minimum of:");
        jButtonEmployeeMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmployeeMinActionPerformed(evt);
            }
        });

        jComboBoxEmployeeMinCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Social Security Number", "Name", "System Access Code" }));

        jComboBoxEmployeeDoes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Does", "Does Not" }));

        jButtonEmployeeAvg.setText("Find Average of:");
        jButtonEmployeeAvg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmployeeAvgActionPerformed(evt);
            }
        });

        jComboBoxEmployeeAvgCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Social Security Number", "System Access Code" }));

        jButtonEmployeeSum.setText("Find Sum of:");
        jButtonEmployeeSum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmployeeSumActionPerformed(evt);
            }
        });

        jComboBoxEmployeeSumCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Social Security Number", "System Access Code" }));

        javax.swing.GroupLayout jPanelEmployeeLayout = new javax.swing.GroupLayout(jPanelEmployee);
        jPanelEmployee.setLayout(jPanelEmployeeLayout);
        jPanelEmployeeLayout.setHorizontalGroup(
            jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldEmployee)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEmployeeLayout.createSequentialGroup()
                        .addComponent(jComboBoxEmployeeSortCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxEmployeeOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jButtonEmployee))
                    .addGroup(jPanelEmployeeLayout.createSequentialGroup()
                        .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanelEmployeeLayout.createSequentialGroup()
                                .addComponent(jButtonEmployeeMax)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxEmployeeMaxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelEmployeeLayout.createSequentialGroup()
                                .addComponent(jButtonEmployeeMin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxEmployeeMinCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addGroup(jPanelEmployeeLayout.createSequentialGroup()
                                .addComponent(jComboBoxEmployeeCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxEmployeeDoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxEmployeeOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelEmployeeLayout.createSequentialGroup()
                                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonEmployeeAvg)
                                    .addComponent(jButtonEmployeeSum))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxEmployeeSumCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxEmployeeAvgCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelEmployeeLayout.setVerticalGroup(
            jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmployeeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxEmployeeCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxEmployeeOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxEmployeeDoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonEmployee)
                    .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBoxEmployeeSortCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxEmployeeOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEmployeeSum)
                    .addComponent(jComboBoxEmployeeSumCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEmployeeAvg)
                    .addComponent(jComboBoxEmployeeAvgCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEmployeeMin)
                    .addComponent(jComboBoxEmployeeMinCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEmployeeMax)
                    .addComponent(jComboBoxEmployeeMaxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Search:");

        jComboBoxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Category", "Customer", "Employee", "Cargo Van", "Full Size Van", "Pickup" }));
        jComboBoxCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextAreaResults.setColumns(20);
        jTextAreaResults.setRows(5);
        jScrollPane1.setViewportView(jTextAreaResults);

        jLabel6.setText("Results:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelCargoVan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setText("Cargo Van");

        jComboBoxCargoVanCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Internal Volume", "Customer SSN" }));

        jLabel8.setText("Search where: ");

        jButtonCargoVan.setText("Search");
        jButtonCargoVan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargoVanActionPerformed(evt);
            }
        });

        jComboBoxCargoVanOperator.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Equal", "Begin with", "End with", "Contain" }));

        jLabel16.setText("Sorted by:");

        jComboBoxCargoVanSortCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Internal Volume", "Customer SSN" }));

        jComboBoxCargoVanOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascending", "Descending" }));

        jButtonCargoVanMax.setText("Find Maximum of:");
        jButtonCargoVanMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargoVanMaxActionPerformed(evt);
            }
        });

        jComboBoxCargoVanMaxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Internal Volume", "Customer SSN" }));

        jButtonCargoVanMin.setText("Find Minimum of:");
        jButtonCargoVanMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargoVanMinActionPerformed(evt);
            }
        });

        jComboBoxCargoVanMinCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Internal Volume", "Customer SSN" }));

        jComboBoxCargoVanDoes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Does", "Does Not" }));

        jButtonCargoVanAvg.setText("Find Average of:");
        jButtonCargoVanAvg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargoVanAvgActionPerformed(evt);
            }
        });

        jComboBoxCargoVanAvgCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Internal Volume", "Customer SSN" }));

        jButtonCargoVanSum.setText("Find Sum of:");
        jButtonCargoVanSum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargoVanSumActionPerformed(evt);
            }
        });

        jComboBoxCargoVanSumCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Internal Volume", "Customer SSN" }));

        javax.swing.GroupLayout jPanelCargoVanLayout = new javax.swing.GroupLayout(jPanelCargoVan);
        jPanelCargoVan.setLayout(jPanelCargoVanLayout);
        jPanelCargoVanLayout.setHorizontalGroup(
            jPanelCargoVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCargoVanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCargoVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldCargoVan)
                    .addGroup(jPanelCargoVanLayout.createSequentialGroup()
                        .addComponent(jComboBoxCargoVanSortCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxCargoVanOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addComponent(jButtonCargoVan))
                    .addGroup(jPanelCargoVanLayout.createSequentialGroup()
                        .addGroup(jPanelCargoVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel16)
                            .addGroup(jPanelCargoVanLayout.createSequentialGroup()
                                .addComponent(jButtonCargoVanMax)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCargoVanMaxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelCargoVanLayout.createSequentialGroup()
                                .addComponent(jButtonCargoVanMin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCargoVanMinCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelCargoVanLayout.createSequentialGroup()
                                .addComponent(jComboBoxCargoVanCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCargoVanDoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCargoVanOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelCargoVanLayout.createSequentialGroup()
                                .addGroup(jPanelCargoVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonCargoVanAvg)
                                    .addComponent(jButtonCargoVanSum))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelCargoVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxCargoVanSumCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxCargoVanAvgCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelCargoVanLayout.setVerticalGroup(
            jPanelCargoVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCargoVanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(7, 7, 7)
                .addGroup(jPanelCargoVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCargoVanCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCargoVanOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCargoVanDoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldCargoVan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCargoVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCargoVanSortCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCargoVanOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCargoVan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanelCargoVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCargoVanSum)
                    .addComponent(jComboBoxCargoVanSumCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCargoVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCargoVanAvg)
                    .addComponent(jComboBoxCargoVanAvgCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCargoVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCargoVanMin)
                    .addComponent(jComboBoxCargoVanMinCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCargoVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCargoVanMax)
                    .addComponent(jComboBoxCargoVanMaxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanelFullSizeVan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setText("Full Size Van");

        jComboBoxFullSizeVanCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Van Length", "Customer SSN" }));

        jLabel10.setText("Search where: ");

        jButtonFullSizeVan.setText("Search");
        jButtonFullSizeVan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFullSizeVanActionPerformed(evt);
            }
        });

        jComboBoxFullSizeVanOperator.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Equal", "Begin with", "End with", "Contain" }));

        jLabel17.setText("Sorted by:");

        jComboBoxFullSizeVanSortCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Van Length", "Customer SSN" }));

        jComboBoxFullSizeVanOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascending", "Descending" }));

        jButtonFullSizeVanMax.setText("Find Maximum of:");
        jButtonFullSizeVanMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFullSizeVanMaxActionPerformed(evt);
            }
        });

        jComboBoxFullSizeVanMaxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Van Length", "Customer SSN" }));

        jButtonFullSizeVanMin.setText("Find Minimum of:");
        jButtonFullSizeVanMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFullSizeVanMinActionPerformed(evt);
            }
        });

        jComboBoxFullSizeVanMinCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Van Length", "Customer SSN" }));

        jComboBoxFullSizeVanDoes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Does", "Does Not" }));

        jButtonFullSizeVanAvg.setText("Find Average of:");
        jButtonFullSizeVanAvg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFullSizeVanAvgActionPerformed(evt);
            }
        });

        jComboBoxFullSizeVanAvgCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Van Length", "Customer SSN" }));

        jButtonFullSizeVanSum.setText("Find Sum of:");
        jButtonFullSizeVanSum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFullSizeVanSumActionPerformed(evt);
            }
        });

        jComboBoxFullSizeVanSumCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Van Length", "Customer SSN" }));

        javax.swing.GroupLayout jPanelFullSizeVanLayout = new javax.swing.GroupLayout(jPanelFullSizeVan);
        jPanelFullSizeVan.setLayout(jPanelFullSizeVanLayout);
        jPanelFullSizeVanLayout.setHorizontalGroup(
            jPanelFullSizeVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFullSizeVanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFullSizeVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldFullSizeVan)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFullSizeVanLayout.createSequentialGroup()
                        .addGroup(jPanelFullSizeVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addGroup(jPanelFullSizeVanLayout.createSequentialGroup()
                                .addComponent(jComboBoxFullSizeVanSortCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxFullSizeVanOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(jButtonFullSizeVan))
                    .addGroup(jPanelFullSizeVanLayout.createSequentialGroup()
                        .addGroup(jPanelFullSizeVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addGroup(jPanelFullSizeVanLayout.createSequentialGroup()
                                .addComponent(jButtonFullSizeVanMax)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxFullSizeVanMaxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelFullSizeVanLayout.createSequentialGroup()
                                .addComponent(jButtonFullSizeVanMin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxFullSizeVanMinCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelFullSizeVanLayout.createSequentialGroup()
                                .addComponent(jComboBoxFullSizeVanCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxFullSizeVanDoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxFullSizeVanOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelFullSizeVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelFullSizeVanLayout.createSequentialGroup()
                                    .addComponent(jButtonFullSizeVanSum)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxFullSizeVanSumCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelFullSizeVanLayout.createSequentialGroup()
                                    .addComponent(jButtonFullSizeVanAvg)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jComboBoxFullSizeVanAvgCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelFullSizeVanLayout.setVerticalGroup(
            jPanelFullSizeVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFullSizeVanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFullSizeVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxFullSizeVanCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxFullSizeVanOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxFullSizeVanDoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldFullSizeVan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFullSizeVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonFullSizeVan)
                    .addGroup(jPanelFullSizeVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBoxFullSizeVanSortCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxFullSizeVanOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanelFullSizeVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFullSizeVanSum)
                    .addComponent(jComboBoxFullSizeVanSumCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFullSizeVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFullSizeVanAvg)
                    .addComponent(jComboBoxFullSizeVanAvgCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFullSizeVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFullSizeVanMin)
                    .addComponent(jComboBoxFullSizeVanMinCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFullSizeVanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFullSizeVanMax)
                    .addComponent(jComboBoxFullSizeVanMaxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanelPickup.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setText("Pickup");

        jComboBoxPickupCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Bed Length", "Customer SSN" }));

        jLabel12.setText("Search where: ");

        jButtonPickup.setText("Search");
        jButtonPickup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPickupActionPerformed(evt);
            }
        });

        jComboBoxPickupOperator.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Equal", "Begin with", "End with", "Contain" }));

        jLabel18.setText("Sorted by:");

        jComboBoxPickupSortCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Bed Length", "Customer SSN" }));

        jComboBoxPickupOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascending", "Descending" }));

        jButtonPickupMax.setText("Find Maximum of:");
        jButtonPickupMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPickupMaxActionPerformed(evt);
            }
        });

        jComboBoxPickupMaxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Bed Length", "Customer SSN" }));

        jButtonPickupMin.setText("Find Minimum of:");
        jButtonPickupMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPickupMinActionPerformed(evt);
            }
        });

        jComboBoxPickupMinCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Bed Length", "Customer SSN" }));

        jComboBoxPickupDoes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Does", "Does Not" }));

        jButtonPickupAvg.setText("Find Average of:");
        jButtonPickupAvg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPickupAvgActionPerformed(evt);
            }
        });

        jComboBoxPickupAvgCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Bed Length", "Customer SSN" }));

        jButtonPickupSum.setText("Find Sum of:");
        jButtonPickupSum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPickupSumActionPerformed(evt);
            }
        });

        jComboBoxPickupSumCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plate Number", "Mileage", "Bed Length", "Customer SSN" }));

        javax.swing.GroupLayout jPanelPickupLayout = new javax.swing.GroupLayout(jPanelPickup);
        jPanelPickup.setLayout(jPanelPickupLayout);
        jPanelPickupLayout.setHorizontalGroup(
            jPanelPickupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPickupLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPickupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldPickup)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPickupLayout.createSequentialGroup()
                        .addGroup(jPanelPickupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(jPanelPickupLayout.createSequentialGroup()
                                .addComponent(jComboBoxPickupSortCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxPickupOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(jButtonPickup))
                    .addGroup(jPanelPickupLayout.createSequentialGroup()
                        .addGroup(jPanelPickupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addGroup(jPanelPickupLayout.createSequentialGroup()
                                .addComponent(jButtonPickupMax)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxPickupMaxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelPickupLayout.createSequentialGroup()
                                .addComponent(jButtonPickupMin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxPickupMinCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelPickupLayout.createSequentialGroup()
                                .addComponent(jComboBoxPickupCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxPickupDoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxPickupOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelPickupLayout.createSequentialGroup()
                                .addGroup(jPanelPickupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonPickupAvg)
                                    .addComponent(jButtonPickupSum))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelPickupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxPickupSumCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxPickupAvgCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelPickupLayout.setVerticalGroup(
            jPanelPickupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPickupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPickupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxPickupCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxPickupOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxPickupDoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPickup, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addGap(9, 9, 9)
                .addGroup(jPanelPickupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPickup)
                    .addComponent(jComboBoxPickupSortCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxPickupOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanelPickupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPickupSum)
                    .addComponent(jComboBoxPickupSumCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPickupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPickupAvg)
                    .addComponent(jComboBoxPickupAvgCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPickupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPickupMin)
                    .addComponent(jComboBoxPickupMinCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPickupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPickupMax)
                    .addComponent(jComboBoxPickupMaxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelCargoVan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelFullSizeVan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelPickup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCargoVan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelFullSizeVan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelPickup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCustomerActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "SELECT * FROM Customer WHERE ";
            switch (jComboBoxCustomerCategory.getSelectedIndex()) {
                case 0:
                    statement += "upper(SSN) ";
                    break;
                case 1:
                    statement += "upper(FNAME) ";
                    break;
                case 2:
                    statement += "upper(LNAME) ";
                    break;
                default:
                    statement += "upper(DRIVERSLICENSE#) ";
                    break;
            }
            switch(jComboBoxCustomerDoes.getSelectedIndex()){
                case 0:
                    statement+=" like ";
                    break;
                default:
                    statement+=" not like ";
                    break;
            }
            switch (jComboBoxCustomerOperator.getSelectedIndex()) {
                case 0:
                    statement += "'" + jTextFieldCustomer.getText().toUpperCase() + "'";
                    break;
                case 1:
                    statement += "'" + jTextFieldCustomer.getText().toUpperCase() + "%'";
                    break;
                case 2:
                    statement += "'%" + jTextFieldCustomer.getText().toUpperCase() + "'";
                    break;
                default:
                    statement += "'%" + jTextFieldCustomer.getText().toUpperCase() + "%'";
                    break;
            }
            switch(jComboBoxCustomerSortCategory.getSelectedIndex()){
                case 0:
                    statement+=" order by ssn ";
                    break;
                case 1:
                    statement+=" order by fname ";
                    break;
                case 2:
                    statement+=" order by lnsme ";
                    break;
                default:
                    statement+=" order by driverslicense# ";
            }
            switch(jComboBoxCustomerOrder.getSelectedIndex()){
                case 0:
                    statement+=" asc";
                    break;
                default:
                    statement+=" desc";
                    break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results = "SocialSecurityNumber | DateOfBirth | FirstName | MiddleInit | LastName | DriversLicense#"+"\n";
            while (rset.next()) {

                results += (rset.getString(1) + " " + rset.getString(2)
                        + " " + rset.getString(3)
                        + " " + rset.getString(4)
                        + " " + rset.getString(5) + rset.getString(6) + "\n");
            }
            if(results!="SocialSecurityNumber | DateOfBirth | FirstName | MiddleInit | LastName | DriversLicense#"+"\n"){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();

        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonCustomerActionPerformed

    private void jButtonCustomerMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCustomerMaxActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Max(";
            switch(jComboBoxCustomerMaxCategory.getSelectedIndex()){
               case 0:
                    statement += "SSN) from customer ";
                    break;
                case 1:
                    statement += "fname) from customer ";
                    break;
                case 2:
                    statement += "lname) from customer ";
                    break;
                default:
                    statement += "driverslicense#) from customer ";
                    break; 
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }
            
            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_jButtonCustomerMaxActionPerformed

    private void jButtonCustomerMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCustomerMinActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Min(";
            switch(jComboBoxCustomerMinCategory.getSelectedIndex()){
               case 0:
                    statement += "SSN) from customer ";
                    break;
                case 1:
                    statement += "fname) from customer ";
                    break;
                case 2:
                    statement += "lname) from customer ";
                    break;
                default:
                    statement += "driverslicense#) from customer ";
                    break; 
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }
            
            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonCustomerMinActionPerformed

    private void jButtonCustomerAvgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCustomerAvgActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Avg(";
            switch(jComboBoxCustomerAvgCategory.getSelectedIndex()){
               case 0:
                    statement += "SSN) from customer ";
                    break;
                
                default:
                    statement += "driverslicense#) from customer ";
                    break; 
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }
            
            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonCustomerAvgActionPerformed

    private void jComboBoxCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCategoryActionPerformed
        if (jComboBoxCategory.getSelectedIndex() == 0) {
            jPanelCustomer.setVisible(false);
        jPanelEmployee.setVisible(false);
        jPanelCargoVan.setVisible(false);
        jPanelFullSizeVan.setVisible(false);
        jPanelPickup.setVisible(false);
        }else if (jComboBoxCategory.getSelectedIndex() == 1) {
            jPanelCustomer.setVisible(true);
        jPanelEmployee.setVisible(false);
        jPanelCargoVan.setVisible(false);
        jPanelFullSizeVan.setVisible(false);
        jPanelPickup.setVisible(false);
        } else if (jComboBoxCategory.getSelectedIndex() == 2) {
            jPanelCustomer.setVisible(false);
        jPanelEmployee.setVisible(true);
        jPanelCargoVan.setVisible(false);
        jPanelFullSizeVan.setVisible(false);
        jPanelPickup.setVisible(false);
        }else if (jComboBoxCategory.getSelectedIndex() == 3) {
            jPanelCustomer.setVisible(false);
        jPanelEmployee.setVisible(false);
        jPanelCargoVan.setVisible(true);
        jPanelFullSizeVan.setVisible(false);
        jPanelPickup.setVisible(false);
        }else if (jComboBoxCategory.getSelectedIndex() == 4) {
            jPanelCustomer.setVisible(false);
        jPanelEmployee.setVisible(false);
        jPanelCargoVan.setVisible(false);
        jPanelFullSizeVan.setVisible(true);
        jPanelPickup.setVisible(false);
        }else if (jComboBoxCategory.getSelectedIndex() == 5) {
            jPanelCustomer.setVisible(false);
        jPanelEmployee.setVisible(false);
        jPanelCargoVan.setVisible(false);
        jPanelFullSizeVan.setVisible(false);
        jPanelPickup.setVisible(true);
        }
    }//GEN-LAST:event_jComboBoxCategoryActionPerformed

    private void jButtonEmployeeAvgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmployeeAvgActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Avg(";
            switch(jComboBoxEmployeeAvgCategory.getSelectedIndex()){
                case 0:
                statement += "SSN) from employee ";
                break;
                
                default:
                statement += "systemaccesscode) from employee ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEmployeeAvgActionPerformed

    private void jButtonEmployeeMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmployeeMinActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Min(";
            switch(jComboBoxEmployeeMinCategory.getSelectedIndex()){
                case 0:
                statement += "SSN) from employee ";
                break;
                case 1:
                statement += "name) from employee ";
                break;
                default:
                statement += "systemaccesscode) from employee ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEmployeeMinActionPerformed

    private void jButtonEmployeeMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmployeeMaxActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Max(";
            switch(jComboBoxEmployeeMaxCategory.getSelectedIndex()){
                case 0:
                statement += "SSN) from employee ";
                break;
                case 1:
                statement += "name) from employee ";
                break;
                default:
                statement += "systemaccesscode) from employee ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEmployeeMaxActionPerformed

    private void jButtonEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmployeeActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "SELECT * FROM Employee WHERE ";
            switch (jComboBoxEmployeeCategory.getSelectedIndex()) {
                case 0:
                statement += "upper(SSN) ";
                break;
                case 1:
                statement += "upper(NAME) ";
                break;
                default:
                statement += "upper(systemaccesscode) ";
                break;
            }
            switch(jComboBoxEmployeeDoes.getSelectedIndex()){
                case 0:
                statement+=" like ";
                break;
                default:
                statement+=" not like ";
                break;
            }
            switch (jComboBoxEmployeeOperator.getSelectedIndex()) {
                case 0:
                statement += "'" + jTextFieldEmployee.getText().toUpperCase() + "'";
                break;
                case 1:
                statement += "'" + jTextFieldEmployee.getText().toUpperCase() + "%'";
                break;
                case 2:
                statement += "'%" + jTextFieldEmployee.getText().toUpperCase() + "'";
                break;
                default:
                statement += "'%" + jTextFieldEmployee.getText().toUpperCase() + "%'";
                break;
            }
            switch(jComboBoxEmployeeSortCategory.getSelectedIndex()){
                case 0:
                statement+=" order by ssn ";
                break;
                case 1:
                statement+=" order by name ";
                break;

                default:
                statement+=" order by systemaccesscode ";
            }
            switch(jComboBoxEmployeeOrder.getSelectedIndex()){
                case 0:
                statement+=" asc";
                break;
                default:
                statement+=" desc";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results = "SocialSecurityNumber | Name | System Access Code"+"\n";
            while (rset.next()) {

                results += (rset.getString(1) + " " + rset.getString(2)
                    + " " + rset.getString(3)
                    + "\n");
            }
            if(results!="SocialSecurityNumber | Name | System Access Code"+"\n"){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }

            rset.close();
            stmt.close();
            conn.close();

        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEmployeeActionPerformed

    private void jButtonCargoVanAvgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargoVanAvgActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Avg(";
            switch(jComboBoxCargoVanAvgCategory.getSelectedIndex()){
                case 0:
                statement += "platenumber) from cargovan ";
                break;
                case 1:
                statement += "mileage) from cargovan ";
                break;
                case 2:
                statement += "internalvolume) from cargovan ";
                break;
                default:
                statement += "customerssn) from cargovan ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonCargoVanAvgActionPerformed

    private void jButtonCargoVanMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargoVanMinActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Min(";
            switch(jComboBoxCargoVanMinCategory.getSelectedIndex()){
                case 0:
                statement += "platenumber) from cargovan ";
                break;
                case 1:
                statement += "mileage) from cargovan ";
                break;
                case 2:
                statement += "internalvolume) from cargovan ";
                break;
                default:
                statement += "customerssn) from cargovan ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonCargoVanMinActionPerformed

    private void jButtonCargoVanMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargoVanMaxActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Max(";
            switch(jComboBoxCargoVanMaxCategory.getSelectedIndex()){
                case 0:
                statement += "platenumber) from cargovan ";
                break;
                case 1:
                statement += "mileage) from cargovan ";
                break;
                case 2:
                statement += "internalvolume) from cargovan ";
                break;
                default:
                statement += "customerssn) from cargovan ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonCargoVanMaxActionPerformed

    private void jButtonCargoVanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargoVanActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "SELECT * FROM cargovan WHERE ";
            switch (jComboBoxCargoVanCategory.getSelectedIndex()) {
                case 0:
                statement += "upper(platenumber) ";
                break;
                case 1:
                statement += "upper(mileage) ";
                break;
                case 2:
                statement += "upper(internalvolume) ";
                break;
                default:
                statement += "upper(customerssn) ";
                break;
            }
            switch(jComboBoxCargoVanDoes.getSelectedIndex()){
                case 0:
                statement+=" like ";
                break;
                default:
                statement+=" not like ";
                break;
            }
            switch (jComboBoxCargoVanOperator.getSelectedIndex()) {
                case 0:
                statement += "'" + jTextFieldCargoVan.getText().toUpperCase() + "'";
                break;
                case 1:
                statement += "'" + jTextFieldCargoVan.getText().toUpperCase() + "%'";
                break;
                case 2:
                statement += "'%" + jTextFieldCargoVan.getText().toUpperCase() + "'";
                break;
                default:
                statement += "'%" + jTextFieldCargoVan.getText().toUpperCase() + "%'";
                break;
            }
            switch(jComboBoxCargoVanSortCategory.getSelectedIndex()){
                case 0:
                statement+=" order by platenumber ";
                break;
                case 1:
                statement+=" order by mileage ";
                break;
                case 2:
                statement+=" order by internalvolume ";
                break;
                default:
                statement+=" order by customerssn ";
            }
            switch(jComboBoxCargoVanOrder.getSelectedIndex()){
                case 0:
                statement+=" asc";
                break;
                default:
                statement+=" desc";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results = "PlateNumber | Mileage | InternalVolume | CustomerSSN"+"\n";
            while (rset.next()) {

                results += (rset.getString(1) + " " + rset.getString(2)
                    + " " + rset.getString(3)
                    + " " + rset.getString(4)
                    +  "\n");
            }
            if(results!="PlateNumber | Mileage | InternalVolume | CustomerSSN"+"\n"){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();

        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonCargoVanActionPerformed

    private void jButtonFullSizeVanAvgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFullSizeVanAvgActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Avg(";
            switch(jComboBoxFullSizeVanAvgCategory.getSelectedIndex()){
                case 0:
                statement += "platenumber) from fullsizevan ";
                break;
                case 1:
                statement += "mileage) from fullsizevan ";
                break;
                case 2:
                statement += "vanlength) from fullsizevan ";
                break;
                default:
                statement += "customerssn) from fullsizevan ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonFullSizeVanAvgActionPerformed

    private void jButtonFullSizeVanMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFullSizeVanMinActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Min(";
            switch(jComboBoxFullSizeVanMinCategory.getSelectedIndex()){
                case 0:
                statement += "platenumber) from fullsizevan ";
                break;
                case 1:
                statement += "mileage) from fullsizevan ";
                break;
                case 2:
                statement += "vanlength) from fullsizevan ";
                break;
                default:
                statement += "customerssn) from fullsizevan ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonFullSizeVanMinActionPerformed

    private void jButtonFullSizeVanMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFullSizeVanMaxActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Max(";
            switch(jComboBoxFullSizeVanMaxCategory.getSelectedIndex()){
                case 0:
                statement += "platenumber) from fullsizevan ";
                break;
                case 1:
                statement += "mileage) from fullsizevan ";
                break;
                case 2:
                statement += "vanlength) from fullsizevan ";
                break;
                default:
                statement += "customerssn) from fullsizevan ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonFullSizeVanMaxActionPerformed

    private void jButtonFullSizeVanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFullSizeVanActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "SELECT * FROM fullsizevan WHERE ";
            switch (jComboBoxFullSizeVanCategory.getSelectedIndex()) {
                case 0:
                statement += "upper(platenumber) ";
                break;
                case 1:
                statement += "upper(mileage) ";
                break;
                case 2:
                statement += "upper(vanlength) ";
                break;
                default:
                statement += "upper(customerssn) ";
                break;
            }
            switch(jComboBoxFullSizeVanDoes.getSelectedIndex()){
                case 0:
                statement+=" like ";
                break;
                default:
                statement+=" not like ";
                break;
            }
            switch (jComboBoxFullSizeVanOperator.getSelectedIndex()) {
                case 0:
                statement += "'" + jTextFieldFullSizeVan.getText().toUpperCase() + "'";
                break;
                case 1:
                statement += "'" + jTextFieldFullSizeVan.getText().toUpperCase() + "%'";
                break;
                case 2:
                statement += "'%" + jTextFieldFullSizeVan.getText().toUpperCase() + "'";
                break;
                default:
                statement += "'%" + jTextFieldFullSizeVan.getText().toUpperCase() + "%'";
                break;
            }
            switch(jComboBoxFullSizeVanSortCategory.getSelectedIndex()){
                case 0:
                statement+=" order by platenumber ";
                break;
                case 1:
                statement+=" order by mileage ";
                break;
                case 2:
                statement+=" order by vanlength ";
                break;
                default:
                statement+=" order by customerssn ";
            }
            switch(jComboBoxFullSizeVanOrder.getSelectedIndex()){
                case 0:
                statement+=" asc";
                break;
                default:
                statement+=" desc";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results = "PlateNumber | Mileage | VanLength | CustomerSSN"+"\n";
            while (rset.next()) {

                results += (rset.getString(1) + " " + rset.getString(2)
                    + " " + rset.getString(3)
                    + " " + rset.getString(4)
                    +  "\n");
            }
            if(results!="PlateNumber | Mileage | VanLength | CustomerSSN"+"\n"){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();

        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonFullSizeVanActionPerformed

    private void jButtonPickupAvgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPickupAvgActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Avg(";
            switch(jComboBoxPickupAvgCategory.getSelectedIndex()){
                case 0:
                statement += "platenumber) from pickup ";
                break;
                case 1:
                statement += "mileage) from pickup ";
                break;
                case 2:
                statement += "bedlength) from pickup ";
                break;
                default:
                statement += "customerssn) from pickup ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPickupAvgActionPerformed

    private void jButtonPickupMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPickupMinActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Min(";
            switch(jComboBoxPickupMinCategory.getSelectedIndex()){
                case 0:
                statement += "platenumber) from pickup ";
                break;
                case 1:
                statement += "mileage) from pickup ";
                break;
                case 2:
                statement += "bedlength) from pickup ";
                break;
                default:
                statement += "customerssn) from pickup ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPickupMinActionPerformed

    private void jButtonPickupMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPickupMaxActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Max(";
            switch(jComboBoxPickupMaxCategory.getSelectedIndex()){
                case 0:
                statement += "platenumber) from pickup ";
                break;
                case 1:
                statement += "mileage) from pickup ";
                break;
                case 2:
                statement += "bedlength) from pickup ";
                break;
                default:
                statement += "customerssn) from pickup ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPickupMaxActionPerformed

    private void jButtonPickupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPickupActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "SELECT * FROM pickup WHERE ";
            switch (jComboBoxPickupCategory.getSelectedIndex()) {
                case 0:
                statement += "upper(platenumber) ";
                break;
                case 1:
                statement += "upper(mileage) ";
                break;
                case 2:
                statement += "upper(bedlength) ";
                break;
                default:
                statement += "upper(customerssn) ";
                break;
            }
            switch(jComboBoxPickupDoes.getSelectedIndex()){
                case 0:
                statement+=" like ";
                break;
                default:
                statement+=" not like ";
                break;
            }
            switch (jComboBoxPickupOperator.getSelectedIndex()) {
                case 0:
                statement += "'" + jTextFieldPickup.getText().toUpperCase() + "'";
                break;
                case 1:
                statement += "'" + jTextFieldPickup.getText().toUpperCase() + "%'";
                break;
                case 2:
                statement += "'%" + jTextFieldPickup.getText().toUpperCase() + "'";
                break;
                default:
                statement += "'%" + jTextFieldPickup.getText().toUpperCase() + "%'";
                break;
            }
            switch(jComboBoxPickupSortCategory.getSelectedIndex()){
                case 0:
                statement+=" order by platenumber ";
                break;
                case 1:
                statement+=" order by mileage ";
                break;
                case 2:
                statement+=" order by bedlength ";
                break;
                default:
                statement+=" order by customerssn ";
            }
            switch(jComboBoxPickupOrder.getSelectedIndex()){
                case 0:
                statement+=" asc";
                break;
                default:
                statement+=" desc";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results = "PlateNumber | Mileage | BedLength | CustomerSSN"+"\n";
            while (rset.next()) {

                results += (rset.getString(1) + " " + rset.getString(2)
                    + " " + rset.getString(3)
                    + " " + rset.getString(4)
                    +  "\n");
            }
            if(results!="PlateNumber | Mileage | BedLength | CustomerSSN"+"\n"){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();

        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPickupActionPerformed

    private void jButtonCustomerSumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCustomerSumActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Sum(";
            switch(jComboBoxCustomerSumCategory.getSelectedIndex()){
               case 0:
                    statement += "SSN) from customer ";
                    break;
                
                default:
                    statement += "driverslicense#) from customer ";
                    break; 
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }
            
            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonCustomerSumActionPerformed

    private void jButtonEmployeeSumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmployeeSumActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Sum(";
            switch(jComboBoxEmployeeSumCategory.getSelectedIndex()){
                case 0:
                statement += "SSN) from employee ";
                break;
                
                default:
                statement += "systemaccesscode) from employee ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEmployeeSumActionPerformed

    private void jButtonCargoVanSumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargoVanSumActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Sum(";
            switch(jComboBoxCargoVanSumCategory.getSelectedIndex()){
                case 0:
                statement += "platenumber) from cargovan ";
                break;
                case 1:
                statement += "mileage) from cargovan ";
                break;
                case 2:
                statement += "internalvolume) from cargovan ";
                break;
                default:
                statement += "customerssn) from cargovan ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonCargoVanSumActionPerformed

    private void jButtonFullSizeVanSumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFullSizeVanSumActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Sum(";
            switch(jComboBoxFullSizeVanSumCategory.getSelectedIndex()){
                case 0:
                statement += "platenumber) from fullsizevan ";
                break;
                case 1:
                statement += "mileage) from fullsizevan ";
                break;
                case 2:
                statement += "vanlength) from fullsizevan ";
                break;
                default:
                statement += "customerssn) from fullsizevan ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonFullSizeVanSumActionPerformed

    private void jButtonPickupSumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPickupSumActionPerformed
        try {
            conn= DriverManager.getConnection(url, username, password);
            Statement stmt = conn.createStatement();
            String statement = "Select Sum(";
            switch(jComboBoxPickupSumCategory.getSelectedIndex()){
                case 0:
                statement += "platenumber) from pickup ";
                break;
                case 1:
                statement += "mileage) from pickup ";
                break;
                case 2:
                statement += "bedlength) from pickup ";
                break;
                default:
                statement += "customerssn) from pickup ";
                break;
            }
            ResultSet rset = stmt.executeQuery(statement);
            String results="";
            while(rset.next()){
                results+=rset.getString(1);
            }

            if(results!=""){
                jTextAreaResults.setText(results);
            }else{
                jTextAreaResults.setText("no results found");
            }
            rset.close();
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SQLProject.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPickupSumActionPerformed

    public static void main(String[] args) throws SQLException {
        //jframe
        SQLProject m = new SQLProject();
        m.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        m.setTitle("SQL Assignment");

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCargoVan;
    private javax.swing.JButton jButtonCargoVanAvg;
    private javax.swing.JButton jButtonCargoVanMax;
    private javax.swing.JButton jButtonCargoVanMin;
    private javax.swing.JButton jButtonCargoVanSum;
    private javax.swing.JButton jButtonCustomer;
    private javax.swing.JButton jButtonCustomerAvg;
    private javax.swing.JButton jButtonCustomerMax;
    private javax.swing.JButton jButtonCustomerMin;
    private javax.swing.JButton jButtonCustomerSum;
    private javax.swing.JButton jButtonEmployee;
    private javax.swing.JButton jButtonEmployeeAvg;
    private javax.swing.JButton jButtonEmployeeMax;
    private javax.swing.JButton jButtonEmployeeMin;
    private javax.swing.JButton jButtonEmployeeSum;
    private javax.swing.JButton jButtonFullSizeVan;
    private javax.swing.JButton jButtonFullSizeVanAvg;
    private javax.swing.JButton jButtonFullSizeVanMax;
    private javax.swing.JButton jButtonFullSizeVanMin;
    private javax.swing.JButton jButtonFullSizeVanSum;
    private javax.swing.JButton jButtonPickup;
    private javax.swing.JButton jButtonPickupAvg;
    private javax.swing.JButton jButtonPickupMax;
    private javax.swing.JButton jButtonPickupMin;
    private javax.swing.JButton jButtonPickupSum;
    private javax.swing.JComboBox<String> jComboBoxCargoVanAvgCategory;
    private javax.swing.JComboBox<String> jComboBoxCargoVanCategory;
    private javax.swing.JComboBox<String> jComboBoxCargoVanDoes;
    private javax.swing.JComboBox<String> jComboBoxCargoVanMaxCategory;
    private javax.swing.JComboBox<String> jComboBoxCargoVanMinCategory;
    private javax.swing.JComboBox<String> jComboBoxCargoVanOperator;
    private javax.swing.JComboBox<String> jComboBoxCargoVanOrder;
    private javax.swing.JComboBox<String> jComboBoxCargoVanSortCategory;
    private javax.swing.JComboBox<String> jComboBoxCargoVanSumCategory;
    private javax.swing.JComboBox<String> jComboBoxCategory;
    private javax.swing.JComboBox<String> jComboBoxCustomerAvgCategory;
    private javax.swing.JComboBox<String> jComboBoxCustomerCategory;
    private javax.swing.JComboBox<String> jComboBoxCustomerDoes;
    private javax.swing.JComboBox<String> jComboBoxCustomerMaxCategory;
    private javax.swing.JComboBox<String> jComboBoxCustomerMinCategory;
    private javax.swing.JComboBox<String> jComboBoxCustomerOperator;
    private javax.swing.JComboBox<String> jComboBoxCustomerOrder;
    private javax.swing.JComboBox<String> jComboBoxCustomerSortCategory;
    private javax.swing.JComboBox<String> jComboBoxCustomerSumCategory;
    private javax.swing.JComboBox<String> jComboBoxEmployeeAvgCategory;
    private javax.swing.JComboBox<String> jComboBoxEmployeeCategory;
    private javax.swing.JComboBox<String> jComboBoxEmployeeDoes;
    private javax.swing.JComboBox<String> jComboBoxEmployeeMaxCategory;
    private javax.swing.JComboBox<String> jComboBoxEmployeeMinCategory;
    private javax.swing.JComboBox<String> jComboBoxEmployeeOperator;
    private javax.swing.JComboBox<String> jComboBoxEmployeeOrder;
    private javax.swing.JComboBox<String> jComboBoxEmployeeSortCategory;
    private javax.swing.JComboBox<String> jComboBoxEmployeeSumCategory;
    private javax.swing.JComboBox<String> jComboBoxFullSizeVanAvgCategory;
    private javax.swing.JComboBox<String> jComboBoxFullSizeVanCategory;
    private javax.swing.JComboBox<String> jComboBoxFullSizeVanDoes;
    private javax.swing.JComboBox<String> jComboBoxFullSizeVanMaxCategory;
    private javax.swing.JComboBox<String> jComboBoxFullSizeVanMinCategory;
    private javax.swing.JComboBox<String> jComboBoxFullSizeVanOperator;
    private javax.swing.JComboBox<String> jComboBoxFullSizeVanOrder;
    private javax.swing.JComboBox<String> jComboBoxFullSizeVanSortCategory;
    private javax.swing.JComboBox<String> jComboBoxFullSizeVanSumCategory;
    private javax.swing.JComboBox<String> jComboBoxPickupAvgCategory;
    private javax.swing.JComboBox<String> jComboBoxPickupCategory;
    private javax.swing.JComboBox<String> jComboBoxPickupDoes;
    private javax.swing.JComboBox<String> jComboBoxPickupMaxCategory;
    private javax.swing.JComboBox<String> jComboBoxPickupMinCategory;
    private javax.swing.JComboBox<String> jComboBoxPickupOperator;
    private javax.swing.JComboBox<String> jComboBoxPickupOrder;
    private javax.swing.JComboBox<String> jComboBoxPickupSortCategory;
    private javax.swing.JComboBox<String> jComboBoxPickupSumCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelCargoVan;
    private javax.swing.JPanel jPanelCustomer;
    private javax.swing.JPanel jPanelEmployee;
    private javax.swing.JPanel jPanelFullSizeVan;
    private javax.swing.JPanel jPanelPickup;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaResults;
    private javax.swing.JTextField jTextFieldCargoVan;
    private javax.swing.JTextField jTextFieldCustomer;
    private javax.swing.JTextField jTextFieldEmployee;
    private javax.swing.JTextField jTextFieldFullSizeVan;
    private javax.swing.JTextField jTextFieldPickup;
    // End of variables declaration//GEN-END:variables
}
